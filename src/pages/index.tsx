import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { MouseEventHandler, useState } from "react";

// INCOMING DATA MATCHES OUTGOING FROM RUST
type VocabEntry = {
    form: string;
    lemma: string;
    frequency: number;
    part_of_speech: string | null;
};

type ListResponse = {
    list: VocabEntry[];
    metadata: string;
};

const Home: NextPage = () => {
    const [input, setInput] = useState("");
    const [breadth, setBreadth] = useState("Full List");
    const [style, setStyle] = useState("Raw Vocabulary");

    const generateList = async (): Promise<ListResponse> => {
        const res = await fetch("http://127.0.0.1:8000/russian/generate-list", {
            method: "POST",
            mode: "cors",
            body: JSON.stringify({
                input: input,
                breadth: breadth,
                style: style,
            }),
            headers: {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "http://127.0.0.1:3000",
            },
        });

        if (!res.ok) {
            throw new Error("Failed to fetch");
        }
        const data = (await res.json()) as ListResponse;

        return data;
    };

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" />
                <link
                    href="https://fonts.googleapis.com/css2?family=Inter:wght@100;400;500;700;800&display=swap"
                    rel="stylesheet"
                />
            </Head>
            <main className="min-h-screen bg-stone-950 p-2 pb-16 font-main  text-stone-300 sm:flex sm:flex-col sm:items-center sm:p-8">
                <div className="px-4 transition-all duration-200 sm:w-[600px] md:w-[700px] lg:w-[800px]">
                    <section>
                        <h1 className="mb-2 mt-2 text-center text-5xl font-bold">
                            Rubit
                        </h1>
                        <div className="py-8">
                            <h3 className="text-center text-2xl">
                                Сreate vocabulary lists from Russian text!
                            </h3>
                            <p className="py-2">
                                Try YouTube transcripts of podcasts or speeches,
                                book chapters, or articles.
                            </p>
                            <p className="py-2">
                                Input your study material text and choose
                                settings for what kind of list output you want.
                                You can set the "breadth" to include:
                            </p>
                            <ul>
                                <li>"Full List" (all words)</li>
                                <li>
                                    "Broad List" (exclude the least common
                                    words)
                                </li>
                                <li>
                                    "Top Words" (only the most common words)
                                </li>
                                <li>
                                    "Bottom Words" (only the least common words)
                                </li>
                            </ul>
                            <p className="">
                                "Raw Vocabulary" will return all words, while
                                "Verb Pairs" will return the aspectual pairs in
                                your text, and "Verb Trees" will return verbs in
                                the tree model, in the simplest form: Root Forms
                                (-Branch Forms)
                            </p>
                        </div>
                    </section>

                    <div className="pb-8">
                        <div className="w-full ">
                            <textarea
                                className=" h-36 w-full rounded-sm bg-stone-900 p-3 outline-none outline-2 outline-offset-[-2px] outline-orange-700"
                                name="inputField"
                                onChange={(e) => setInput(e.target.value)}
                                id="inputField"
                            />
                        </div>
                        <div className="flex flex-col sm:flex-row sm:justify-between">
                            <div className="">
                                <select
                                    className="mt-4 h-10 rounded-s-sm bg-stone-600 p-2 px-2 transition-all duration-100 hover:bg-orange-700  focus:ring-inset focus:ring-orange-800"
                                    name="Output_Breadth"
                                    id="Output_Breadth"
                                    onChange={(e) => setBreadth(e.target.value)}
                                    title="Select breadth of output list"
                                >
                                    <option>Full List</option>
                                    <option>Broad List</option>
                                    <option>Top Words</option>
                                    <option>Rare Words</option>
                                </select>

                                <select
                                    className="mt-4 h-10 rounded-e-sm border-s-[1.5px] border-s-stone-700 bg-stone-600 p-2 px-2 ps-4 transition-all duration-100 hover:bg-orange-700  focus:ring-inset focus:ring-orange-800"
                                    name="Output_Style"
                                    id="Output_Style"
                                    onChange={(e) => setStyle(e.target.value)}
                                    title="Select style of output list"
                                >
                                    <option>Raw Vocabulary</option>
                                    <option>Verb Pairs</option>
                                    <option>Verb Trees</option>
                                </select>
                            </div>
                            <div>
                                <button
                                    className="mt-4 h-10 rounded-sm bg-stone-600 p-2 px-4 transition-all duration-100 hover:bg-orange-700 focus:ring-inset focus:ring-orange-800"
                                    title="Generate vocabulary list"
                                    type="submit"
                                    onClick={generateList}
                                    id="Create_List"
                                >
                                    Create List
                                </button>
                            </div>
                        </div>
                    </div>

                    <div>
                        <p className="">
                            All of the words will have links to
                            Wiktionary/Викисловарь, which you can switch between
                            using the button. If the key doesn't recognize a
                            word, it will attempt to automatically update that
                            word.
                        </p>
                    </div>
                </div>
            </main>
        </>
    );
};

export default Home;
